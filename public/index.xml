<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>codehakase&#39;s logs</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on codehakase&#39;s logs</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 07 Feb 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Largest product in a series</title>
      <link>http://localhost:1313/blog/2025-02-07-largest-product-in-a-series/</link>
      <pubDate>Fri, 07 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/2025-02-07-largest-product-in-a-series/</guid>
      <description></description>
    </item>
    <item>
      <title>Working with JSON in Go</title>
      <link>http://localhost:1313/blog/2021-05-03-json-in-go/</link>
      <pubDate>Mon, 03 May 2021 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/2021-05-03-json-in-go/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;Summary: I&amp;rsquo;ve worked with JSON in various programming languages in context to&#xA;data exchange/communication between applications. In this article, I&amp;rsquo;ll give a brief overview of&#xA;the encoding/json package in Go, and point some gotchas I&amp;rsquo;ve&#xA;encountered.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Projects I&#39;ve Authored</title>
      <link>http://localhost:1313/projects/</link>
      <pubDate>Thu, 08 Apr 2021 10:52:01 +0100</pubDate>
      <guid>http://localhost:1313/projects/</guid>
      <description>&lt;p&gt;Below are some small open source software projects I‚Äôve authored or helped develop. Enjoy!&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/codehakase/rld&#34;&gt;rld&lt;/a&gt; is a tiny tool that runs a Go program and watch changes on it.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/engage-so/engage-php&#34;&gt;Engage PHP SDK&lt;/a&gt; lets you capture user attributes and events on your site.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/codehakase/engage-go&#34;&gt;Engage Go SDK&lt;/a&gt;&#xA;is the &lt;a href=&#34;https://engage.so&#34;&gt;Engage.so&lt;/a&gt; sdk written in Go.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/codehakase/slack-logrus&#34;&gt;slack-logrus&lt;/a&gt; is an Intuitive Logrus Hook for Slack.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/codehakase/mobius-client-go&#34;&gt;Mobius Go SDK&lt;/a&gt; is an SDK for the Mobius DApp Store written in Go.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Enum Stringer Interface optimisation in Go</title>
      <link>http://localhost:1313/blog/2021-04-08-enum-stringer-optimization-go/</link>
      <pubDate>Thu, 08 Apr 2021 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/2021-04-08-enum-stringer-optimization-go/</guid>
      <description>&lt;p&gt;The most idiomatic way of describing an enum type in Go is to use constants, often in conjunction with &lt;a href=&#34;https://golang.org/ref/spec#Iota&#34;&gt;iota&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;A pattern I&amp;rsquo;ve used to implement the &lt;code&gt;Stringer&lt;/code&gt; interface for an enum type is to&#xA;lookup the string representation in a slice. Consider this snippet from a&#xA;project I&amp;rsquo;m working on:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Line Numbers In Vim</title>
      <link>http://localhost:1313/blog/2020-02-07-vim-linenumbers/</link>
      <pubDate>Fri, 07 Feb 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/2020-02-07-vim-linenumbers/</guid>
      <description>&lt;p&gt;Vim doesn&amp;rsquo;t show line numbers by default, they can be turned on in your vim configuration. Vim has an absolute, relative and hybrid line numbering mode.&#xA;&lt;img src=&#34;https://res.cloudinary.com/hakase-labs/image/upload/v1581043109/bare_setup_mzb8rd.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>What I Use</title>
      <link>http://localhost:1313/blog/2020-01-10-what-i-use/</link>
      <pubDate>Fri, 10 Jan 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/2020-01-10-what-i-use/</guid>
      <description>&lt;p&gt;For  the few times I have to tell people in detail the software and hardware I use on a day to day basis to do my job, here‚Äôs a post to list them. My setup changes from time to time but I‚Äôll try to keep this up to date.&#xA;My dotfiles can be found  on &lt;a href=&#34;https://github.com/codehakase/dotfiles&#34;&gt;This Repo&lt;/a&gt; - they work for me, read carefully before installing for yourself.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Building Small Containers for Kubernetes</title>
      <link>http://localhost:1313/blog/2018-01-12-building-small-containers-for-kubernetes/</link>
      <pubDate>Sat, 01 Dec 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/2018-01-12-building-small-containers-for-kubernetes/</guid>
      <description>&lt;p&gt;The first step to deploying any app to &lt;a href=&#34;https://kubernetes.io&#34;&gt;Kubernetes&lt;/a&gt;, is to bundle the app in a&#xA;container. There are several official, and community-backed container images for&#xA;various languages and distros, and most of these containers can be really large,&#xA;or sometimes contain overheads your app may never need/use.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Building a Web App With Go, Gin and React</title>
      <link>http://localhost:1313/blog/2018-04-20-building-a-web-app-with-go-gin-and-react/</link>
      <pubDate>Fri, 20 Apr 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/2018-04-20-building-a-web-app-with-go-gin-and-react/</guid>
      <description>&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; In this tutorial, I&amp;rsquo;ll show you how easy it is to build a web application with Go and the Gin framework and add authentication to it. Check out the Github &lt;a href=&#34;https://github.com/codehakase/golang-gin&#34;&gt;repo&lt;/a&gt; for the code we&amp;rsquo;re going to write.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The CouchDB Replicator Database - An Overview</title>
      <link>http://localhost:1313/blog/2018-04-19-couchdb-replicator-database/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/2018-04-19-couchdb-replicator-database/</guid>
      <description>&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; In this article, I&amp;rsquo;ll give an overview of the replicator database in CouchDB, how to spin off a replication task in CouchDB&lt;/p&gt;</description>
    </item>
    <item>
      <title>Here&#39;s What&#39;s New  In Go 1.10</title>
      <link>http://localhost:1313/blog/2018-03-05-whats-new-in-golang-1-dot-10/</link>
      <pubDate>Tue, 06 Mar 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/2018-03-05-whats-new-in-golang-1-dot-10/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;Go 1.8 is one year old (Happy belated Birthday üéä üéâ)&#xA;Go 1.9 is already 6 months old!&#xA;Go 1.10 is out ‚úå&lt;/p&gt;</description>
    </item>
    <item>
      <title>React Native vs Ionic - A Quick Comparison</title>
      <link>http://localhost:1313/blog/2017-12-05-react-native-vs-ionic/</link>
      <pubDate>Tue, 05 Dec 2017 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/2017-12-05-react-native-vs-ionic/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://cdn.scotch.io/23499/HDDv8v7TRhqt4ao1nwfH_React_Native_vs_Ionic_m5b5ol.png.jpg&#34; alt=&#34;&amp;ldquo;React Native vs Ionic&amp;rdquo;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;The main purpose of this article, is to highlight the important differences between Ionic and React Native. Developers utilize a variety of tools. There&amp;rsquo;s always an unending discussion and argument on which platform is best, as every developer has her own personal preferences. Hopefully this article would give you the information you&amp;rsquo;ll need to make a decision on which you&amp;rsquo;d want to settle for in your next mobile app project.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Getting Started with Go - Variables</title>
      <link>http://localhost:1313/blog/2017-11-19-golang-tutorial-series-pt-2/</link>
      <pubDate>Sun, 19 Nov 2017 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/2017-11-19-golang-tutorial-series-pt-2/</guid>
      <description>&lt;p&gt;In the previous article - &lt;a href=&#34;https://dev.to/codehakase/golang---getting-started-16c&#34;&gt;Golang - Getting Started&lt;/a&gt; on &lt;a href=&#34;https://dev.to&#34;&gt;The Practical Dev&lt;/a&gt;, I wrote an intro to the Go programing language, and how to setup a development environment for your platform.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang - Getting Started, The Practical Dev</title>
      <link>http://localhost:1313/blog/2017-11-18-golang-tutorial-series-pt-1/</link>
      <pubDate>Sat, 18 Nov 2017 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/2017-11-18-golang-tutorial-series-pt-1/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;‚ÄúGo will be the server language of the future.‚Äù‚Ää‚Äî‚ÄäTobias L√ºtke, Shopify&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Go was first created as an experiment, the goal of its creators was to come up with a language that would resolve bad practices of others while keeping the good things.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Terminal for Beginners!</title>
      <link>http://localhost:1313/blog/2017-10-28-terminal-for-beginers/</link>
      <pubDate>Sat, 28 Oct 2017 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/2017-10-28-terminal-for-beginers/</guid>
      <description>&lt;p&gt;Getting into Software Development seem overwhelming (actually it is) these days. One has to go through the hassle of getting familiar with different languages, to organizing codebases, to libraries, frameworks, the list goes on. Every Job description (at least the sane ones), requires additional skills to get the job. Example of such, Version Control (Git or Mecurial), tasks runners, build tools, package managers, etc.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How I Learned Golang</title>
      <link>http://localhost:1313/blog/2017-09-02-how-i-got-started-with-golang/</link>
      <pubDate>Sat, 02 Sep 2017 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/2017-09-02-how-i-got-started-with-golang/</guid>
      <description>&lt;p&gt;Go is a relatively new programming language, and nothing makes a developer go crazier than a new programming language, haha! As many new tech inventions, Go was created as an experiment. The goal of its creators was to come up with a language that would resolve bad practices of others while keeping the good things. It was first released in March 2012. Since then Go has attracted many developers from all fields and disciplines.&lt;/p&gt;</description>
    </item>
    <item>
      <title>JavaScript Async/Await 101</title>
      <link>http://localhost:1313/blog/2017-08-02-show-me-async-await-like-am-5/</link>
      <pubDate>Sat, 12 Aug 2017 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/2017-08-02-show-me-async-await-like-am-5/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/aysnc-await.png&#34; alt=&#34;async/await&#34; title=&#34;Async/await&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Async and Await has been a blessing to most JavaScript Developers. Even while it was on the &lt;a href=&#34;https://github.com/tc39/ecma262/tree/82bebe057c9fca355cfbfeb36be8e42f18c61e94&#34;&gt;Stage 4 proposal&lt;/a&gt; for ES6, the feature has been warmtly welcomed.&lt;/p&gt;</description>
    </item>
    <item>
      <title>for...in vs for...of Loops in JavaScript</title>
      <link>http://localhost:1313/blog/2017-06-19-for-in-vs-for-of-loop-javascript/</link>
      <pubDate>Mon, 19 Jun 2017 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/2017-06-19-for-in-vs-for-of-loop-javascript/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/9336187/27305938-97169192-553b-11e7-99cb-99396a9593fd.png&#34; alt=&#34;for-in-graphics&#34; title=&#34;Hakase Labs&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;The &lt;code&gt;for..in&lt;/code&gt; and &lt;code&gt;for..of&lt;/code&gt; loops, gives us a clean and concise syntax to iterate on iterable items like arrays, strings, objects, and enumerables. Now the question is where to use which.&#xA;Here&amp;rsquo;s a little reminder to get you you started.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Build your first RESTful API with Node.js</title>
      <link>http://localhost:1313/blog/2017-06-13-building-a-restful-api-nodejs/</link>
      <pubDate>Tue, 13 Jun 2017 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/2017-06-13-building-a-restful-api-nodejs/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://softwareengineeringdaily.com/wp-content/uploads/2015/08/nodejs_logo_green.jpg&#34; alt=&#34;Node.js&#34; title=&#34;Node.js&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Node.js&lt;/strong&gt; is one intimidating JavaScript framework, especially for beginners. This article serves as a quick quide to Node.js, Express.js and MongoDB. We&amp;rsquo;ll building a simple REST API that&amp;rsquo;ll serve as a basic foundation for an application.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Making hakasebot - Twitter Bots 101</title>
      <link>http://localhost:1313/blog/2017-05-30-making-hakasebot-bots-101/</link>
      <pubDate>Tue, 30 May 2017 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/2017-05-30-making-hakasebot-bots-101/</guid>
      <description>&lt;p&gt;![Bots]({{ site.url }}/images/twitter-bots.gif &amp;ldquo;Bots&amp;rdquo;)&lt;/p&gt;&#xA;&lt;p&gt;This was my first attempt making twitter bots. I made a very simple twitter bot for this blog, check the &lt;a href=&#34;https://github.com/codehakase/hakasebot&#34;&gt;Source&lt;/a&gt; and also follow &lt;a href=&#34;https://twitter.com/_hakasebot&#34;&gt;@_hakasebot&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>JavaScript Objects 101</title>
      <link>http://localhost:1313/blog/2017-05-25-javascript-objects-101/</link>
      <pubDate>Thu, 25 May 2017 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/2017-05-25-javascript-objects-101/</guid>
      <description>&lt;p&gt;In JavaScript, most things are objects, from core JavaScript features like strings and arrays to the browser APIs built on top of JavaScript. You can even create your own objects to encapsulate related functions and variables into efficient packages, and act as handy data containers.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Introduction to JavaScript Promises</title>
      <link>http://localhost:1313/blog/2017-05-21-intro-to-javascript-promises/</link>
      <pubDate>Sun, 21 May 2017 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/2017-05-21-intro-to-javascript-promises/</guid>
      <description>&lt;p&gt;JavaScript promises have become a popular way to handle the tangled mess that JavaScript‚Äôs asynchronous nature often creates for us.&#xA;Synchronous code is eaiser to follow and debug, async is better for flexibiity. Promises are becomming a big part of the JavaScript world, with awesome APIs implemented with it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Object-Oriented PHP - An Easy Approach</title>
      <link>http://localhost:1313/blog/2017-05-17-object-oriented-programming-in-php-the-easy-way/</link>
      <pubDate>Wed, 17 May 2017 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/2017-05-17-object-oriented-programming-in-php-the-easy-way/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;%7B%7Bsite.url%7D%7D/images/oop-in-php.png&#34; alt=&#34;OOP-PHP&#34; title=&#34;Object-Oriented Programming in PHP&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;For some PHP developers, the concept of object-orient programming, seems like a frightening concept. You might have browsed through repos on GitHub or read articles on how to implement a feature in a particular PHP project of yours, and the code is full of complicated syntax. I tell you, the concept of OOP is easy to grasp.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Introducing Adonis Js</title>
      <link>http://localhost:1313/blog/2017-05-09-introducing-adonis-js/</link>
      <pubDate>Tue, 09 May 2017 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/2017-05-09-introducing-adonis-js/</guid>
      <description>&lt;h2 id=&#34;tldr&#34;&gt;TL;DR&lt;/h2&gt;&#xA;&lt;p&gt;AdonisJs is a true MVC Framework for Node.js. It encapsulate all the boring parts of Web programming and offers you a nice &amp;amp; clean API to work with. AdonisJs makes it easy to write web applications with less code. In this article, i will show you how to get started with AdonisJs. Checkout the repo on Github.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Posts Archive</title>
      <link>http://localhost:1313/blog/archive/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/archive/</guid>
      <description>This page contains an archive of all posts.</description>
    </item>
  </channel>
</rss>
