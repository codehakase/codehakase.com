<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Go on codehakase&#39;s logs</title>
    <link>http://localhost:1313/tags/go/</link>
    <description>Recent content in Go on codehakase&#39;s logs</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 03 May 2021 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/go/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Working with JSON in Go</title>
      <link>http://localhost:1313/blog/2021-05-03-json-in-go/</link>
      <pubDate>Mon, 03 May 2021 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/2021-05-03-json-in-go/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;Summary: I&amp;rsquo;ve worked with JSON in various programming languages in context to&#xA;data exchange/communication between applications. In this article, I&amp;rsquo;ll give a brief overview of&#xA;the encoding/json package in Go, and point some gotchas I&amp;rsquo;ve&#xA;encountered.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Enum Stringer Interface optimisation in Go</title>
      <link>http://localhost:1313/blog/2021-04-08-enum-stringer-optimization-go/</link>
      <pubDate>Thu, 08 Apr 2021 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/2021-04-08-enum-stringer-optimization-go/</guid>
      <description>&lt;p&gt;The most idiomatic way of describing an enum type in Go is to use constants, often in conjunction with &lt;a href=&#34;https://golang.org/ref/spec#Iota&#34;&gt;iota&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;A pattern I&amp;rsquo;ve used to implement the &lt;code&gt;Stringer&lt;/code&gt; interface for an enum type is to&#xA;lookup the string representation in a slice. Consider this snippet from a&#xA;project I&amp;rsquo;m working on:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Building Small Containers for Kubernetes</title>
      <link>http://localhost:1313/blog/2018-01-12-building-small-containers-for-kubernetes/</link>
      <pubDate>Sat, 01 Dec 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/2018-01-12-building-small-containers-for-kubernetes/</guid>
      <description>&lt;p&gt;The first step to deploying any app to &lt;a href=&#34;https://kubernetes.io&#34;&gt;Kubernetes&lt;/a&gt;, is to bundle the app in a&#xA;container. There are several official, and community-backed container images for&#xA;various languages and distros, and most of these containers can be really large,&#xA;or sometimes contain overheads your app may never need/use.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Building a Web App With Go, Gin and React</title>
      <link>http://localhost:1313/blog/2018-04-20-building-a-web-app-with-go-gin-and-react/</link>
      <pubDate>Fri, 20 Apr 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/2018-04-20-building-a-web-app-with-go-gin-and-react/</guid>
      <description>&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; In this tutorial, I&amp;rsquo;ll show you how easy it is to build a web application with Go and the Gin framework and add authentication to it. Check out the Github &lt;a href=&#34;https://github.com/codehakase/golang-gin&#34;&gt;repo&lt;/a&gt; for the code we&amp;rsquo;re going to write.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Here&#39;s What&#39;s New  In Go 1.10</title>
      <link>http://localhost:1313/blog/2018-03-05-whats-new-in-golang-1-dot-10/</link>
      <pubDate>Tue, 06 Mar 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/2018-03-05-whats-new-in-golang-1-dot-10/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;Go 1.8 is one year old (Happy belated Birthday üéä üéâ)&#xA;Go 1.9 is already 6 months old!&#xA;Go 1.10 is out ‚úå&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang - Getting Started, The Practical Dev</title>
      <link>http://localhost:1313/blog/2017-11-18-golang-tutorial-series-pt-1/</link>
      <pubDate>Sat, 18 Nov 2017 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/2017-11-18-golang-tutorial-series-pt-1/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;‚ÄúGo will be the server language of the future.‚Äù‚Ää‚Äî‚ÄäTobias L√ºtke, Shopify&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Go was first created as an experiment, the goal of its creators was to come up with a language that would resolve bad practices of others while keeping the good things.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How I Learned Golang</title>
      <link>http://localhost:1313/blog/2017-09-02-how-i-got-started-with-golang/</link>
      <pubDate>Sat, 02 Sep 2017 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/2017-09-02-how-i-got-started-with-golang/</guid>
      <description>&lt;p&gt;Go is a relatively new programming language, and nothing makes a developer go crazier than a new programming language, haha! As many new tech inventions, Go was created as an experiment. The goal of its creators was to come up with a language that would resolve bad practices of others while keeping the good things. It was first released in March 2012. Since then Go has attracted many developers from all fields and disciplines.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
