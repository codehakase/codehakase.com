<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Oop on Francis Sunday</title>
    <link>https://codehakase.com/tags/oop/</link>
    <description>Recent content in Oop on Francis Sunday</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 17 May 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://codehakase.com/tags/oop/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Object-Oriented PHP - An Easy Approach</title>
      <link>https://codehakase.com/blog/2017-05-17-object-oriented-programming-in-php-the-easy-way/</link>
      <pubDate>Wed, 17 May 2017 00:00:00 +0000</pubDate>
      <guid>https://codehakase.com/blog/2017-05-17-object-oriented-programming-in-php-the-easy-way/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;%7B%7Bsite.url%7D%7D/images/oop-in-php.png&#34; alt=&#34;OOP-PHP&#34; title=&#34;Object-Oriented Programming in PHP&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;For some PHP developers, the concept of object-orient programming, seems like a frightening concept. You might have browsed through repos on GitHub or read articles on how to implement a feature in a particular PHP project of yours, and the code is full of complicated syntax. I tell you, the concept of OOP is easy to grasp.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Object-Oriented programming&lt;/strong&gt; (OOP), is a style of programming which allows us developers and programmers group related tasks or actions into classes to produce effective code. OOP follows the tenet &lt;em&gt;&amp;ldquo;don&amp;rsquo;t repeat yourself (DRY)&lt;/em&gt;, which are common in procedural programming.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
